version: '3.8'

networks:
  my_network:
    driver: bridge
    ipam:
      config:
        - subnet: "172.20.0.0/16"

services:
#app:
#  image: amazoncorretto:20-alpine-jdk
#  command: java -jar /app/app.jar
#  ports:
#    - "8080:8080"
#  volumes:
#    - ./target/restservice.jar:/app/app.jar
#  depends_on:
#    db:
#      condition: service_healthy

#db:
#  image: postgres:latest
#  ports:
#    - "5432:5432"
#  environment:
#    - POSTGRES_USER=postgres
#    - POSTGRES_PASSWORD=password
#    - POSTGRES_DB=mydatabase
#  volumes:
#    - ./src/main/resources/sqlscripts/Beers.sql:/docker-entrypoint-initdb.d/Beers.sql
#    - ./src/main/resources/sqlscripts/Breweries.sql:/docker-entrypoint-initdb.d/Breweries.sql
#  healthcheck:
#    test: ["CMD-SHELL", "pg_isready -U postgres"]
#    interval: 5s
#    timeout: 5s
#    retries: 10

#pgadmin:
#  image: dpage/pgadmin4:latest
#  ports:
#    - "5050:80"
#  volumes:
#    - pgadmin_data:/var/lib/pgadmin
#  environment:
#    - PGADMIN_DEFAULT_EMAIL=ya@ya.ru
#    - PGADMIN_DEFAULT_PASSWORD=password
#    - PGADMIN_CONFIG_SERVER_MODE=False
#    - PGADMIN_CONFIG_MAX_LOGIN_ATTEMPTS=0
#    - PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=False

  jenkins:
    build:
      context: .  # Use the current directory as the build context
      dockerfile: Dockerfile  # Use the Dockerfile in the current directory
    container_name: jenkins
    user: root
    ports:
      - "8888:8080"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - JENKINS_OPTS=--prefix=/jenkins
      - JAVA_OPTS=-Djenkins.install.runSetupWizard=false -Djenkins.security.csrf.DefaultCrumbIssuer.EXCLUDE=true
      #- JENKINS_ADMIN_ID=admin
      #- JENKINS_ADMIN_PASSWORD=password
    restart: always
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://192.168.1.17:8888/jenkins/" ]
      interval: 5s
      timeout: 5s
      retries: 10

volumes:
  #pgadmin_data:
  jenkins_home: