version: '3.8'

networks:
  beerInfo:
    driver: bridge

services:
  app:
    networks:
      - beerInfo
    image: amazoncorretto:21-alpine-jdk
    command: java --enable-preview -jar /app/app.jar
    ports:
      - "8080:8080"
    volumes:
      - ./target/beerinfo-1.0-shaded.jar:/app/app.jar
    depends_on:
      db:
        condition: service_healthy

  db:
    networks:
      - beerInfo
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=mydatabase
    volumes:
      - ./src/main/resources/sqlscripts/Beers.sql:/docker-entrypoint-initdb.d/Beers.sql
      - ./src/main/resources/sqlscripts/Breweries.sql:/docker-entrypoint-initdb.d/Breweries.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 10

  maven:
    networks:
      - beerInfo
    image: maven:3.9.6-amazoncorretto-21
    command:
      - /bin/bash
      - -c
      - |
        mvn compile -f /usr/share/maven/ref/pom.xml
        mvn -version
        tail -F anything
    ports:
      - "8081:8080"
    volumes:
      - ./pom.xml:/usr/share/maven/ref/pom.xml
      - ./src:/usr/share/maven/ref/src/

    # pgadmin:
  #   image: dpage/pgadmin4:latest
  #   ports:
  #     - "5050:80"
  #   volumes:
  #     - pgadmin_data:/var/lib/pgadmin
  #   environment:
  #     - PGADMIN_DEFAULT_EMAIL=ya@ya.ru
  #     - PGADMIN_DEFAULT_PASSWORD=password
  #     - PGADMIN_CONFIG_SERVER_MODE=False
  #     - PGADMIN_CONFIG_MAX_LOGIN_ATTEMPTS=0
  #     - PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=False

  #jenkins:
  #  build:
  #    context: .  # Use the current directory as the build context
  #    dockerfile: Dockerfile  # Use the Dockerfile in the current directory
  #  container_name: jenkins
  #  user: root
  #  ports:
  #    - "8888:8080"
  #  volumes:
  #    - jenkins_home:/var/jenkins_home
  #    - /var/run/docker.sock:/var/run/docker.sock
  #  environment:
  #    - JENKINS_OPTS=--prefix=/jenkins
  #    - JAVA_OPTS=-Djenkins.install.runSetupWizard=false
  #    - Dhudson.security.csrf.GlobalCrumbIssuerConfiguration.DISABLE_CSRF_PROTECTION=true
  #    #- JAVA_HOME=/usr/lib/jvm/java-21-openjdk
  #    #- PATH=$PATH:$JAVA_HOME/bin /opt/java/openjdk/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
  #    #- -Djenkins.security.csrf.DefaultCrumbIssuer.EXCLUDE=true
  #  restart: always
  #  healthcheck:
  #    test: [ "CMD", "curl", "-f", "http://192.168.1.10:8888/jenkins/" ]
  #    interval: 5s
  #    timeout: 5s
  #    retries: 10
  #volumes:
  #pgadmin_data:
  #jenkins_home: